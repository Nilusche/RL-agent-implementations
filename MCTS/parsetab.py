
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ACTION AND BFS BLOCK BOOL_FUNCTION COLON COMMA COMMENT DOMAIN EFFECT ELSE EQ EXISTS FLUENT GOAL GT GTE ID IF INITIAL LBRACE LOC LOCATION LPAREN LT LTE MCTS NEQ NOT NUMBER NUMBER_FUNCTION OR PICK POSTCOND PRECONDITION PROCEDURE RBRACE REWARD RPAREN SEMI SYMBOL WHILEprogram : symbol_defs fluent_defs action_defs procedure_defs functionssymbol_defs : symbol_def symbol_defs\n                   | symbol_def\n                   | emptysymbol_def : SYMBOL DOMAIN ID EQ LBRACE id_list RBRACE SEMI\n                  | SYMBOL DOMAIN ID EQ ID OR LBRACE id_list RBRACE SEMIid_list : ID COMMA id_list\n               | IDfluent_defs : fluent_def fluent_defs\n                   | fluent_def\n                   | emptyfluent_def : LOCATION FLUENT LOC LPAREN ID RPAREN LBRACE initial_values RBRACEinitial_values : INITIAL LBRACE fluent_values RBRACEfluent_values : LPAREN ID RPAREN EQ ID SEMI fluent_values\n                     | LPAREN ID RPAREN EQ ID SEMIaction_defs : action_def action_defs\n                   | action_def\n                   | emptyaction_def : ACTION ID LPAREN ID COMMA ID RPAREN LBRACE precondition effect RBRACEprecondition : PRECONDITION COLON conditioncondition : condition AND condition\n                 | condition OR condition\n                 | NOT condition\n                 | EXISTS LPAREN ID ID RPAREN condition\n                 | ID NEQ ID\n                 | ID EQ IDeffect : EFFECT COLON effect_action SEMIeffect_action : ID LPAREN ID RPAREN EQ IDprocedure_defs : procedure_def procedure_defs\n                      | procedure_def\n                      | emptyprocedure_def : PROCEDURE ID LBRACE procedure_body RBRACEprocedure_body : statement procedure_body\n                      | statementstatement : action_call\n                 | mcts_callaction_call : ID LPAREN ID COMMA ID RPAREN SEMImcts_call : MCTS LPAREN NUMBER COMMA ID RPAREN SEMIfunctions : bool_function number_functionbool_function : BOOL_FUNCTION ID EQ condition SEMInumber_function : NUMBER_FUNCTION ID EQ reward_function SEMIreward_function : IF LPAREN condition RPAREN NUMBER ELSE NUMBERempty :'
    
_lr_action_items = {'SYMBOL':([0,3,71,99,],[5,5,-5,-6,]),'LOCATION':([0,2,3,4,7,10,71,97,99,],[-43,9,-3,-4,9,-2,-5,-12,-6,]),'ACTION':([0,2,3,4,6,7,8,10,13,16,71,97,99,121,],[-43,-43,-3,-4,15,-10,-11,-2,15,-9,-5,-12,-6,-19,]),'PROCEDURE':([0,2,3,4,6,7,8,10,12,13,14,16,20,23,64,71,97,99,121,],[-43,-43,-3,-4,-43,-10,-11,-2,22,-17,-18,-9,22,-16,-32,-5,-12,-6,-19,]),'BOOL_FUNCTION':([0,2,3,4,6,7,8,10,12,13,14,16,19,20,21,23,30,64,71,97,99,121,],[-43,-43,-3,-4,-43,-10,-11,-2,-43,-17,-18,-9,29,-30,-31,-16,-29,-32,-5,-12,-6,-19,]),'$end':([1,27,36,87,],[0,-1,-39,-41,]),'DOMAIN':([5,],[11,]),'FLUENT':([9,],[17,]),'ID':([11,15,22,26,29,32,33,35,37,39,46,49,50,51,53,55,56,61,63,74,75,77,78,80,88,93,94,95,107,109,114,119,120,122,128,131,137,],[18,24,31,34,38,40,41,43,45,47,59,47,-35,-36,67,43,43,59,81,89,90,59,59,93,59,101,102,103,116,59,59,-37,-38,127,132,133,138,]),'LOC':([17,],[25,]),'EQ':([18,38,45,59,124,135,],[26,46,58,75,128,137,]),'LPAREN':([24,25,47,52,62,73,98,127,134,],[32,33,63,66,80,88,107,131,107,]),'LBRACE':([26,31,42,54,83,85,],[35,39,55,68,96,98,]),'NUMBER_FUNCTION':([28,76,],[37,-40,]),'OR':([34,60,79,89,90,91,92,100,118,123,],[42,78,78,-25,-26,78,78,78,78,78,]),'MCTS':([39,49,50,51,119,120,],[52,52,-35,-36,-37,-38,]),'COMMA':([40,43,81,82,],[53,56,94,95,]),'RPAREN':([41,67,79,89,90,91,92,100,101,102,103,116,118,133,],[54,83,-23,-25,-26,-21,-22,108,109,110,111,124,-24,135,]),'RBRACE':([43,44,48,49,50,51,65,69,70,84,106,112,115,119,120,130,134,136,],[-8,57,64,-34,-35,-36,-33,86,-7,97,115,121,-13,-37,-38,-27,-15,-14,]),'NOT':([46,61,77,78,88,109,114,],[61,61,61,61,61,61,61,]),'EXISTS':([46,61,77,78,88,109,114,],[62,62,62,62,62,62,62,]),'SEMI':([57,60,72,79,86,89,90,91,92,110,111,118,126,129,132,138,],[71,76,87,-23,99,-25,-26,-21,-22,119,120,-24,130,-42,134,-28,]),'IF':([58,],[73,]),'NEQ':([59,],[74,]),'AND':([60,79,89,90,91,92,100,118,123,],[77,77,-25,-26,77,77,77,77,77,]),'NUMBER':([66,108,125,],[82,117,129,]),'INITIAL':([68,],[85,]),'EFFECT':([79,89,90,91,92,104,118,123,],[-23,-25,-26,-21,-22,113,-24,-20,]),'PRECONDITION':([96,],[105,]),'COLON':([105,113,],[114,122,]),'ELSE':([117,],[125,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'symbol_defs':([0,3,],[2,10,]),'symbol_def':([0,3,],[3,3,]),'empty':([0,2,3,6,7,12,13,20,],[4,8,4,14,8,21,14,21,]),'fluent_defs':([2,7,],[6,16,]),'fluent_def':([2,7,],[7,7,]),'action_defs':([6,13,],[12,23,]),'action_def':([6,13,],[13,13,]),'procedure_defs':([12,20,],[19,30,]),'procedure_def':([12,20,],[20,20,]),'functions':([19,],[27,]),'bool_function':([19,],[28,]),'number_function':([28,],[36,]),'id_list':([35,55,56,],[44,69,70,]),'procedure_body':([39,49,],[48,65,]),'statement':([39,49,],[49,49,]),'action_call':([39,49,],[50,50,]),'mcts_call':([39,49,],[51,51,]),'condition':([46,61,77,78,88,109,114,],[60,79,91,92,100,118,123,]),'reward_function':([58,],[72,]),'initial_values':([68,],[84,]),'precondition':([96,],[104,]),'fluent_values':([98,134,],[106,136,]),'effect':([104,],[112,]),'effect_action':([122,],[126,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> symbol_defs fluent_defs action_defs procedure_defs functions','program',5,'p_program','gologparser.py',15),
  ('symbol_defs -> symbol_def symbol_defs','symbol_defs',2,'p_symbol_defs','gologparser.py',19),
  ('symbol_defs -> symbol_def','symbol_defs',1,'p_symbol_defs','gologparser.py',20),
  ('symbol_defs -> empty','symbol_defs',1,'p_symbol_defs','gologparser.py',21),
  ('symbol_def -> SYMBOL DOMAIN ID EQ LBRACE id_list RBRACE SEMI','symbol_def',8,'p_symbol_def','gologparser.py',25),
  ('symbol_def -> SYMBOL DOMAIN ID EQ ID OR LBRACE id_list RBRACE SEMI','symbol_def',10,'p_symbol_def','gologparser.py',26),
  ('id_list -> ID COMMA id_list','id_list',3,'p_id_list','gologparser.py',33),
  ('id_list -> ID','id_list',1,'p_id_list','gologparser.py',34),
  ('fluent_defs -> fluent_def fluent_defs','fluent_defs',2,'p_fluent_defs','gologparser.py',41),
  ('fluent_defs -> fluent_def','fluent_defs',1,'p_fluent_defs','gologparser.py',42),
  ('fluent_defs -> empty','fluent_defs',1,'p_fluent_defs','gologparser.py',43),
  ('fluent_def -> LOCATION FLUENT LOC LPAREN ID RPAREN LBRACE initial_values RBRACE','fluent_def',9,'p_fluent_def','gologparser.py',47),
  ('initial_values -> INITIAL LBRACE fluent_values RBRACE','initial_values',4,'p_initial_values','gologparser.py',52),
  ('fluent_values -> LPAREN ID RPAREN EQ ID SEMI fluent_values','fluent_values',7,'p_fluent_values','gologparser.py',56),
  ('fluent_values -> LPAREN ID RPAREN EQ ID SEMI','fluent_values',6,'p_fluent_values','gologparser.py',57),
  ('action_defs -> action_def action_defs','action_defs',2,'p_action_defs','gologparser.py',65),
  ('action_defs -> action_def','action_defs',1,'p_action_defs','gologparser.py',66),
  ('action_defs -> empty','action_defs',1,'p_action_defs','gologparser.py',67),
  ('action_def -> ACTION ID LPAREN ID COMMA ID RPAREN LBRACE precondition effect RBRACE','action_def',11,'p_action_def','gologparser.py',71),
  ('precondition -> PRECONDITION COLON condition','precondition',3,'p_precondition','gologparser.py',77),
  ('condition -> condition AND condition','condition',3,'p_condition','gologparser.py',81),
  ('condition -> condition OR condition','condition',3,'p_condition','gologparser.py',82),
  ('condition -> NOT condition','condition',2,'p_condition','gologparser.py',83),
  ('condition -> EXISTS LPAREN ID ID RPAREN condition','condition',6,'p_condition','gologparser.py',84),
  ('condition -> ID NEQ ID','condition',3,'p_condition','gologparser.py',85),
  ('condition -> ID EQ ID','condition',3,'p_condition','gologparser.py',86),
  ('effect -> EFFECT COLON effect_action SEMI','effect',4,'p_effect','gologparser.py',90),
  ('effect_action -> ID LPAREN ID RPAREN EQ ID','effect_action',6,'p_effect_action','gologparser.py',94),
  ('procedure_defs -> procedure_def procedure_defs','procedure_defs',2,'p_procedure_defs','gologparser.py',98),
  ('procedure_defs -> procedure_def','procedure_defs',1,'p_procedure_defs','gologparser.py',99),
  ('procedure_defs -> empty','procedure_defs',1,'p_procedure_defs','gologparser.py',100),
  ('procedure_def -> PROCEDURE ID LBRACE procedure_body RBRACE','procedure_def',5,'p_procedure_def','gologparser.py',104),
  ('procedure_body -> statement procedure_body','procedure_body',2,'p_procedure_body','gologparser.py',108),
  ('procedure_body -> statement','procedure_body',1,'p_procedure_body','gologparser.py',109),
  ('statement -> action_call','statement',1,'p_statement','gologparser.py',116),
  ('statement -> mcts_call','statement',1,'p_statement','gologparser.py',117),
  ('action_call -> ID LPAREN ID COMMA ID RPAREN SEMI','action_call',7,'p_action_call','gologparser.py',121),
  ('mcts_call -> MCTS LPAREN NUMBER COMMA ID RPAREN SEMI','mcts_call',7,'p_mcts_call','gologparser.py',125),
  ('functions -> bool_function number_function','functions',2,'p_functions','gologparser.py',129),
  ('bool_function -> BOOL_FUNCTION ID EQ condition SEMI','bool_function',5,'p_bool_function','gologparser.py',133),
  ('number_function -> NUMBER_FUNCTION ID EQ reward_function SEMI','number_function',5,'p_number_function','gologparser.py',137),
  ('reward_function -> IF LPAREN condition RPAREN NUMBER ELSE NUMBER','reward_function',7,'p_reward_function','gologparser.py',141),
  ('empty -> <empty>','empty',0,'p_empty','gologparser.py',145),
]
